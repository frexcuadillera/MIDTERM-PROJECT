//6-to-64 binary decoder
module h6to64(En,w,y);
input En;
input[5:0]w;
input[63:0]y;
wire[7:0]En_w;
genvar k;

h3to8 parent_block(
.En(En),
.w2(w[5]),
.w1(w[4]),
.w0(w[3]),
.y7(En_w[7]),
.y6(En_w[6]),
.y5(En_w[5]),
.y4(En_w[4]),
.y3(En_w[3]),
.y2(En_w[2]),
.y1(En_w[1]),
.y0(En_w[0])
);

//output blocks
generate
for(k = 0;k < 8;k = k + 1)begin:output_block

h3to8 block[k](
.En(En_w[k]),
.w2(w[2]),
.w1(w[1]),
.w0(w[0]),
.y7(y[8*(k+1)-1]),
.y6(y[7*(k+1)-1]),
.y5(y[6*(k+1)-1]),
.y4(y[5*(k+1)-1]),
.y3(y[4*(k+1)-1]),
.y2(y[3*(k+1)-1]),
.y1(y[2*(k+1)-1]),
.y0(y[1*(k+1)-1])
);
end
endgenerate
endmodule
